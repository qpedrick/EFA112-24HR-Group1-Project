{"version":3,"sources":["components/site/Header.js","components/site/Home.js","components/API/Nasa.js","components/API/OpenWeather.js","components/API/TicketMaster.js","components/site/Sidebar.js","components/site/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","Home","navigator","geolocation","getCurrentPosition","pos","crd","coords","console","log","latitude","longitude","accuracy","err","warn","code","message","Nasa","useState","lat","setLat","lng","setLng","status","setStatus","image","setImage","Button","onClick","position","variant","fetch","then","res","json","url","catch","alt","src","height","width","OpenWeather","type","setType","results","setResults","Math","round","temp","feels_like","temp_min","temp_max","data","main","TicketMaster","props","search","setSearch","extraResult","setExtraResults","TextField","id","label","value","onChange","e","target","method","headers","Headers","_embedded","events","fetchEvents","name","Link","color","rel","Sidebar","to","exact","path","Footer","theme","createTheme","palette","primary","secondary","neutral","contrastText","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37e4882d.chunk.js","sourcesContent":["import {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\n\nconst Header = () => {\n    return(\n        <header>\n            <Navbar className = 'header'>\n                <NavbarBrand href = '/'>24-Hour Project</NavbarBrand>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Header;","import React, { useState } from 'react';\n\nconst Home = () => {\n\n    function success(pos) {\n        var crd = pos.coords;\n        console.log(\"Your current position is:\");\n        console.log(`Latitude : ${crd.latitude}`);\n        console.log(`Longitude: ${crd.longitude}`);\n        console.log(`More or less ${crd.accuracy} meters.`);\n    }\n    function error(err) {\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n    const getLoc = navigator.geolocation.getCurrentPosition(success, error);\n\n\n    return(\n\n        <div className = 'main'>\n            <div className = 'mainDiv'>\n                <h1>Welcome to our Group Project!</h1>\n                <br/>\n                <p>\n                    To begin, allow location access on your device.\n                </p>\n                <p>\n                    Select the NASA API from the sidebar to see an imagine rendered of your current location.\n                </p>\n                <p>\n                    Select the Open Weather API to see current weather in your area in Fahrenheit and Celsius.\n                </p>\n                <p>\n                    Select the TicketMaster API to display current events in your area.\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","/*API key = '9OyDJd4K3mQV7jlaO0tLvP1Gsibafxns1tMSrzab'*/\n\nimport React, { useState } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Button from '@mui/material/Button';\n\nconst Nasa = () => {\n    const [lat, setLat] = useState(null);\n    const [lng, setLng] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [image, setImage] = useState(null);\n    const key = '9OyDJd4K3mQV7jlaO0tLvP1Gsibafxns1tMSrzab';\n    const date = '2020-01-01';\n\n    const getLocation = () => {\n        if (!navigator.geolocation) {\n            setStatus('Geolocation is not supported by your broswer');\n        } else {\n            setStatus('Locating...');\n            navigator.geolocation.getCurrentPosition((position) => {\n                setStatus(null);\n                setLat(position.coords.latitude);\n                setLng(position.coords.longitude);\n            }, () => {\n                setStatus('Unable to retrieve your location');\n            });\n        }\n    }\n\n    const getImage = () => {\n        fetch(`https://api.nasa.gov/planetary/earth/assets?lon=${lng}&lat=${lat}&date=${date}&api_key=${key}`)\n            .then(res => res.json())\n            .then(json => {\n                setImage(json.url);\n                console.log(json.url)\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    return (\n        <div className='main'>\n            <div className='mainDiv'>\n                <h1>Nasa API</h1>\n                <Button onClick={getLocation} variant=\"contained\">Get Location</Button>\n                <h2><br />Coordinates</h2>\n                <p>{status}</p>\n                {lat && <p>Latitude: {lat}</p>}\n                {lng && <p>Longitude: {lng}</p>}\n                <h3><br />Image</h3>\n                <Button onClick={() => getImage()} variant=\"contained\">Get Image</Button>\n                <div>\n                    <img alt='Please get location first :)' src={image} height='250px' width='250px'></img>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Nasa;","import React, { useState } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Button from '@mui/material/Button';\n\nconst OpenWeather = () => {\n    const [lat, setLat] = useState(null);\n    const [lng, setLng] = useState(null);;\n    const [type, setType] = useState(false);\n    const [results, setResults] = useState(null);\n    const key = `08d029604b596f179b40bb36b23a43c3`;\n    //const altkey = '87fdda7a943f4b425d67f817af9cab46'\n    const getLocation = () => {\n        if (!navigator.geolocation) {\n            console.log(`Geolocation is not supported by your broswer`);\n        } else {\n            console.log(`Locating...`);\n            navigator.geolocation.getCurrentPosition((position) => {\n                setLat(position.coords.latitude);\n                console.log(lat);\n                setLng(position.coords.longitude);\n                console.log(lng);\n            }, () => {\n                console.log(`Unable to retrieve your location`);\n            });\n        }\n    }\n    const fetchCurrentWeather = () => {\n        fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${key}`)\n            .then(res => res.json())\n            .then(data => {\n                setResults(data.main)\n            })\n            .catch(err => console.log(err))\n        }\n    const Convert = () => {\n        if (type == true){\n            setType(false);\n        }else{\n            setType(true);\n        }\n    }\n    return (\n        <div className='main'>\n            {getLocation()}\n            <div className='mainDiv'></div>\n            <h1>OpenWeather API</h1>\n            {results ? <table>\n                <thead>\n                    <tr>\n                        <th>Current Temp</th>\n                        <th>Current Feels-Like Temp</th>\n                        <th>Minimum Temp</th>\n                        <th>Maximum Temp</th>\n                    </tr>\n                </thead>\n                {type ?                 \n                <tbody>\n                <td>{`${Math.round((results.temp - 273.15))}C`}</td>\n                <td>{`${Math.round((results.feels_like -273.15))}C`}</td>\n                <td>{`${Math.round((results.temp_min -273.15))}C`}</td>\n                <td>{`${Math.round((results.temp_max -273.15))}C`}</td></tbody>: \n                <tbody>\n                <td>{`${Math.round((results.temp -273.15)*9/5 + 32)}F`}</td>\n                <td>{`${Math.round((results.feels_like -273.15)*9/5 + 32)}F`}</td>\n                <td>{`${Math.round((results.temp_min -273.15)*9/5 + 32)}F`}</td>\n                <td>{`${Math.round((results.temp_max -273.15)*9/5 + 32)}F`}</td>\n                </tbody>}\n\n            </table> : <div></div>}\n            <Button onClick={Convert} variant=\"contained\">C/F</Button>\n            <div>\n            <Button onClick={fetchCurrentWeather} variant=\"contained\">Find Weather</Button>\n            </div>\n        </div>\n    )\n}\nexport default OpenWeather;","import React, {useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Button, TextField, Link } from '@mui/material/';\n\n\nconst TicketMaster = (props) => {\n    const ticketmasterKey=\"hKAMgR5YeiSPjplmgrpwTuMTCQp63O46\"\n    const [search, setSearch] = useState('');\n    const [results, setResults] = useState({})\n    const [lat, setLat] = useState(null);\n    const [lng, setLng] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [extraResult, setExtraResults] = useState({});\n    \n\n    const fetchEvents = () => {\n        let url = `https://cors-anywhere.herokuapp.com/https://app.ticketmaster.com/discovery/v2/events.json?apikey=${ticketmasterKey}&latlong=${lat},${lng}` // tried to add \"https://cors-anywhere.herokuapp.com/\" in front of the link\n        \n        fetch(url, { // CORS PROBLEM BUT SHOWS UP ON POST\n            method: \"GET\",\n            headers : new Headers({\n                \"Access-Control-Allow-Origin\": \"*\",\n                // \"Host\": \"app.ticketmaster.com\", //God pls this be it\n                // \"X-Target-URI\": \"https://app.ticketmaster.com\",\n                \"Connection\": \"Keep-Alive\",\n                // \"Accept-Encoding\": \"gzip,deflate,br\",\n            })\n        })  \n        .then(res => res.json())\n        .then(data => {\n            console.log(data._embedded.events[1])\n            setResults(data._embedded.events[1])\n            setExtraResults(data._embedded.events[2])\n        })\n        .catch(err => console.log(err))\n    }\n\n    const getLocation = () => {\n        if (!navigator.geolocation) {\n            setStatus(\"Geolocation is not supported by your broswer\");\n        } else {\n            setStatus(\"Locating\");\n            navigator.geolocation.getCurrentPosition((position) => {\n                setStatus(null);\n                setLat(position.coords.latitude);\n                setLng(position.coords.longitude);\n            }, () => {\n                setStatus(\"Unable to retrieve your location\");\n            });\n        }\n    }\n\n\nreturn(\n    <div className = 'main'>\n        <main>\n            <div className=\"searchbox\">\n                <h2>TicketMaster Events</h2>\n                <TextField id=\"filled-basic\" className=\"searchbar\" label=\"Search\" variant=\"filled\"\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n                />\n                <br />\n                <br />\n                <a href=\"https://cors-anywhere.herokuapp.com/\" target=\"_blank\">\n                <Button variant=\"contained\">Access CORS</Button></a>\n                <br />\n                <br />\n                <Button onClick={() => getLocation()} variant=\"contained\">Get Location</Button>\n                <h2>\n                <br />\n                Latitude & Longitude</h2>\n                <p>Latitude: {lat}</p>\n                <p>Longitude: {lng}</p>\n                <p>{status}</p>\n                <br />\n                <Button onClick={() => fetchEvents()} variant=\"contained\">Get Events Near You</Button>\n                <p>\n                    {results.name}\n                    <br/>\n                    <Link href = {results.url} color=\"secondary\" rel = 'noreferrer' target = '_blank'>{results.url}</Link>\n                    <br />\n                </p>\n                <p>\n                    {extraResult.name}\n                    <br/>\n                    <Link href = {extraResult.url} color=\"secondary\" rel = 'noreferrer' target = '_blank'>{extraResult.url}</Link>\n                    <br />\n                </p>\n                \n            </div>\n        </main>\n    </div>\n    )\n};\n\n    \nexport default TicketMaster;\n","import {\n    Route,\n    Link,\n    Switch\n} from 'react-router-dom';\nimport Home from './Home';\nimport Nasa from '../API/Nasa';\nimport OpenWeather from '../API/OpenWeather';\nimport TicketMaster from '../API/TicketMaster';\n\n\nconst Sidebar = () => {\n    return(\n        <div className='sidebar'>\n            <div className='sidebar-list-styling'>\n                <ul className='sidebar-list list-unstyled'>\n                    <li><Link to = '/'>Home</Link></li>\n                    <li><Link to = '/nasa'>NASA API</Link></li>\n                    <li><Link to = '/openweather'>Open Weather API</Link></li>\n                    <li><Link to = '/ticketmaster'>TicketMaster API</Link></li>\n                </ul>\n            </div>\n            <div className='sidebar-route'>\n                <Switch>\n                    <Route exact path = '/'><Home /></Route>\n                    <Route exact path = '/nasa'><Nasa /></Route>\n                    <Route exact path = '/openweather'><OpenWeather /></Route>\n                    <Route exact path = '/ticketmaster'><TicketMaster /></Route>\n                </Switch>\n            </div>\n        </div>\n    );\n};\n\nexport default Sidebar;","import {Row} from 'reactstrap';\n\nconst Footer = () => {\n    return(\n        <footer>\n            <row>\n                <p>Created by Kiersten Gamby, Brandon Nguyen, Quinton Pedrick, & Andrew Wesson</p>\n            </row>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n\nimport Header from './components/site/Header';\nimport Sidebar from './components/site/Sidebar';\nimport Footer from './components/site/Footer';\n\nimport Nasa from './components/API/Nasa';\nimport OpenWeather from './components/API/OpenWeather';\nimport TicketMaster from './components/API/TicketMaster';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#c57b57',\n    },\n    secondary: {\n      main: '#1E2D2F'\n    },\n    neutral: {\n      contrastText: '#fff',\n    },\n  },\n});\n\n\n\nfunction App() {\n\n  \n  return (\n    <ThemeProvider className=\"App\" theme={theme}>\n        <Header />\n          <Router>\n            <Sidebar />\n          </Router>\n          <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}